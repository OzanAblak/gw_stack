name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build images
        run: docker compose build

      - name: Start stack
        run: docker compose up -d

      - name: Wait for services
        run: |
          set -e
          deadline=$((SECONDS+240))
          echo "Waiting for gateway..."
          until curl -fsS http://localhost:18088/health; do
            if [ $SECONDS -ge $deadline ]; then
              echo "gateway health timeout"
              docker compose ps || true
              docker compose logs --no-color gateway || true
              exit 1
            fi
            sleep 3
          done
          echo "Waiting for planner..."
          deadline=$((SECONDS+240))
          until curl -fsS http://localhost:19090/health; do
            if [ $SECONDS -ge $deadline ]; then
              echo "planner health timeout"
              docker compose ps || true
              docker compose logs --no-color planner || true
              exit 1
            fi
            sleep 3
          done

      - name: UI smoke
        run: curl -fsS http://localhost:18088/

      - name: Install jq
        run: sudo apt-get update -y && sudo apt-get install -y jq

      - name: Compile planId
        run: |
          set -e
          PLANID=$(curl -fsS -X POST http://localhost:18088/v1/plan/compile | jq -r .planId)
          test ${#PLANID} -eq 36
          echo "PLANID=$PLANID" >> $GITHUB_ENV

      - name: API smoke via gateway
        run: |
          set -euo pipefail
          code=$(curl -s -o /dev/null -w "%{http_code}" "http://localhost:18088/v1/plan/${PLANID}")
          test "$code" = "200"

      - name: E2E TTLâ†’410
        run: |
          set -euo pipefail
          deadline=$((SECONDS+240))
          while [ $SECONDS -lt $deadline ]; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "http://localhost:18088/v1/plan/${PLANID}")
            [ "$code" = "410" ] && exit 0
            sleep 5
          done
          echo "E2E timeout waiting for 410"
          docker compose ps || true
          docker compose logs --no-color || true
          exit 1

      - name: Show logs on failure
        if: ${{ failure() }}
        run: docker compose logs --no-color

      - name: Teardown
        if: always()
        run: docker compose down -v
